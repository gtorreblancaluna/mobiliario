package forms.inventario;

import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Articulo;

public class AgregarArticuloDisponibilidad extends java.awt.Dialog {

    
    private List<Articulo> articulos = new ArrayList<>();
    private static final DecimalFormat decimalFormat = new DecimalFormat( "#,###,###,##0.00" );
    
   
    public AgregarArticuloDisponibilidad(java.awt.Frame parent, boolean modal, List<Articulo> articulos) {
        super(parent, modal);
        initComponents();       
        txt_buscar.requestFocus();
        
        this.setLocationRelativeTo(null);
        this.lblEncontrados.setText("");
        this.setTitle("Buscar articulo ");
        formato_tabla();     
        this.articulos = articulos;
    }

    
    private void formato_tabla() {
        
        Object[][] data = {{"", "", "", "", ""}};
        String[] columnNames = {"Id", "Categoria", "Descripcion", "Color", "P.Unitario", "Stock"};       
        DefaultTableModel TableModel = new DefaultTableModel(data, columnNames);
        tablaArticulos.setModel(TableModel);

        int[] anchos = {10, 120, 250, 100, 90, 90};

        for (int inn = 0; inn < tablaArticulos.getColumnCount(); inn++) {
            tablaArticulos.getColumnModel().getColumn(inn).setPreferredWidth(anchos[inn]);
        }

        DefaultTableCellRenderer right = new DefaultTableCellRenderer();
        right.setHorizontalAlignment(SwingConstants.RIGHT);

        DefaultTableCellRenderer centrar = new DefaultTableCellRenderer();
        centrar.setHorizontalAlignment(SwingConstants.CENTER);

        try {
            DefaultTableModel temp = (DefaultTableModel) tablaArticulos.getModel();
            temp.removeRow(temp.getRowCount() - 1);
        } catch (ArrayIndexOutOfBoundsException e) {
        }
        
        tablaArticulos.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaArticulos.getColumnModel().getColumn(0).setMinWidth(0);
        tablaArticulos.getColumnModel().getColumn(0).setPreferredWidth(0);      
        tablaArticulos.getColumnModel().getColumn(2).setCellRenderer(centrar);
        tablaArticulos.getColumnModel().getColumn(3).setCellRenderer(centrar);
        tablaArticulos.getColumnModel().getColumn(4).setCellRenderer(right);
        tablaArticulos.getColumnModel().getColumn(5).setCellRenderer(right);

    }

     public void tabla_articulos_like() {
         
        formato_tabla();
        
        List<Articulo> filterArticulos = articulos.stream()
                .filter(articulo -> Objects.nonNull(articulo))
                .filter(articulo -> Objects.nonNull(articulo.getDescripcion()))
                .filter(articulo -> Objects.nonNull(articulo.getColor()))
                .filter(articulo -> (articulo.getDescripcion().trim().toLowerCase() + " " + articulo.getColor().getColor().trim().toLowerCase()).contains(txt_buscar.getText().toLowerCase().trim()))
                .collect(Collectors.toList());
        
        DefaultTableModel tableModel = (DefaultTableModel) tablaArticulos.getModel();
        
        filterArticulos.forEach(articulo -> {
            Object fila[] = {                                          
                articulo.getArticuloId(),
                articulo.getCategoria().getDescripcion(),
                articulo.getDescripcion(),
                articulo.getColor().getColor(),
                decimalFormat.format(articulo.getPrecioRenta()),
                decimalFormat.format(articulo.getStock())
              };
              tableModel.addRow(fila);
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaArticulos = new javax.swing.JTable(){public boolean isCellEditable(int rowIndex,int colIndex){return false;}};
        txt_buscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblEncontrados = new javax.swing.JLabel();

        setLocationRelativeTo(lblEncontrados);
        setTitle("Colores");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaArticulos.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        tablaArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaArticulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaArticulosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaArticulos);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 680, 240));

        txt_buscar.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscarKeyReleased(evt);
            }
        });
        jPanel2.add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 630, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search-icon.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        lblEncontrados.setText("jLabel1");
        jPanel2.add(lblEncontrados, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 680, -1));

        add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
//        InventarioForm.validar_colores = true;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void txt_buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyReleased
        // TODO add your handling code here:
           tabla_articulos_like();
    }//GEN-LAST:event_txt_buscarKeyReleased

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void tablaArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaArticulosMouseClicked
         if (evt.getClickCount() == 2) {
             String idArticulo = null;
             idArticulo = tablaArticulos.getValueAt(tablaArticulos.getSelectedRow(), 0).toString();
            if (idArticulo == null || idArticulo.equals("")) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado, porfavor intentalo de nuevo, si el problema sigue, reinicia el sistema :P ", "Error", JOptionPane.INFORMATION_MESSAGE);
                Toolkit.getDefaultToolkit().beep();
             }else{
               if(InventarioForm.agregarArticulo(idArticulo))
                   this.dispose();
                 
            }
         }
    }//GEN-LAST:event_tablaArticulosMouseClicked


    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgregarArticuloDisponibilidad dialog = new AgregarArticuloDisponibilidad(new java.awt.Frame(), true, new ArrayList<>());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEncontrados;
    private javax.swing.JTable tablaArticulos;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
