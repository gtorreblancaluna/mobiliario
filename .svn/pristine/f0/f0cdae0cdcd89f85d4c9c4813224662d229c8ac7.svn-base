/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mobiliario;

import clases.sqlclass;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.nio.file.Files;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 *
 * @author Carlos Alberto
 */
public class principal extends javax.swing.JFrame {

    clientes ventana_clientes;
    iniciar_sesion v_iniciar_sesion;
    utilerias ventana_utilerias;
    usuarios ventana_usuarios;
    inventario ventana_inventario;
    consultar_abonos ventana_abonos;
    agregar_renta ventana_agregar_renta;
    consultar_renta v_consultar_renta;
//    sqlclass funcion = new sqlclass();
//    sqlclass general = new sqlclass();
    Object[][] dtconduc, datos_cliente;
    Object[] datos_combo;
    String sql = "", fecha_sistema = "";

    /**
     * Creates new form principal
     */
    
    public principal() {       
        
//        funcion.conectate(); 
            initComponents();
            fecha_sistema();
//            Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png"));
//            setIconImage(icon);
            this.setExtendedState(this.MAXIMIZED_BOTH);
//            lbl_logueo.setText(iniciar_sesion.nombre_usuario_global + " " + iniciar_sesion.apellidos_usuario_global);
//            lblPuesto.setText(funcion.GetData("descripcion", "SELECT p.`descripcion` FROM usuarios u, puesto p\n"
//                    + "WHERE u.id_puesto=p.id_puesto AND p.`id_puesto`='" + iniciar_sesion.id_puesto_global.toString() + "'"));
//            funcion.desconecta();
            lbl_logueo.setText(iniciar_sesion.usuarioGlobal.getNombre()+" "+iniciar_sesion.usuarioGlobal.getApellidos());
            lblPuesto.setText(iniciar_sesion.usuarioGlobal.getPuesto().getDescripcion());

            sql = "SELECT r.`id_renta`,r.`folio`,CONCAT(c.`nombre`,\" \", c.`apellidos`)AS cliente,e.`descripcion` as estado, r.`fecha_entrega`, r.`hora_entrega`, r.`descripcion`,CONCAT(u.`nombre`,\" \",u.`apellidos`)AS Chofer FROM renta r, estado e, clientes c,usuarios u\n"
                    + "WHERE r.id_estado=e.id_estado AND r.id_clientes=c.id_clientes AND STR_TO_DATE(r.`fecha_entrega`, '%d/%m/%Y') >= STR_TO_DATE('" + fecha_sistema + "', '%d/%m/%Y') AND r.id_usuario_chofer=u.id_usuarios AND r.`id_tipo`='1' ORDER BY r.`folio`";
            
//            validarVersion();
            
        
    }
    
    public void validarVersion(){
        // funcion para instalar version de prueba
        
//        String no = funcion.GetData("numero", "SELECT COUNT(*) AS numero FROM renta ");
//        int numero = Integer.parseInt(no);
//        if(numero >= 350000){
            // 2018.04.27 GTL limite de registros para versiones de prueba
//            JOptionPane.showMessageDialog(this, "Usted alcanzo el limite de registros para esta version de prueba :(");
//            System.exit(0);
//        }else{        
            //20180427 GTL obtener el path de una ruta y si es diferente a donde queremos instalarlo
            // no dejara seguir con el sistema, con esto evitamos que se instale en otra maquina sin nuestra autorizacion
//            Path path = Paths.get("C:\\Users\\jerry");
//            Path path = Paths.get("C:\\Users\\hp");
//            Path path = Paths.get("C:\\Users\\Ricardo");

            
//            Path path = Paths.get("C:\\Users\\OEM");
//            System.out.println(Files.exists(path));
//            if(!Files.exists(path)){
//                JOptionPane.showMessageDialog(this, "Se a detectado ruta original de instalacion diferente, porfavor contacte al administrador del sistema ");
//                System.exit(0);
//            }
//        }
    }

    public void fecha_sistema() {
        Calendar fecha = Calendar.getInstance();
        String mes = Integer.toString(fecha.get(Calendar.MONTH) + 1);
        String dia = Integer.toString(fecha.get(Calendar.DATE));
        String auxMes = null, auxDia = null;

        if (mes.length() == 1) {
            auxMes = "0" + mes;
            fecha_sistema = fecha.get(Calendar.DATE) + "/" + auxMes + "/" + fecha.get(Calendar.YEAR);

            if (dia.length() == 1) {
                auxDia = "0" + dia;
                fecha_sistema = auxDia + "/" + auxMes + "/" + fecha.get(Calendar.YEAR);

            }

        } else {
            fecha_sistema = fecha.get(Calendar.DATE) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR);
        }
    }

    public String dia_semana(String fecha) {
        //String fecha1[];  
        String[] fecha1 = fecha.split("/");

        if (fecha1.length != 3) {
            return null;
        }
        //Vector para calcular día de la semana de un año regular.  
        int[] regular = {0, 3, 3, 6, 1, 4, 6, 2, 5, 0, 3, 5};
        //Vector para calcular día de la semana de un año bisiesto.  
        int[] bisiesto = {0, 3, 4, 0, 2, 5, 0, 3, 6, 1, 4, 6};
        //Vector para hacer la traducción de resultado en día de la semana.  
        String[] semana = {"Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"};
        String[] meses = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
        //Día especificado en la fecha recibida por parametro.  
        int d = Integer.parseInt(fecha1[0]);
        //Módulo acumulado del mes especificado en la fecha recibida por parametro.  
        int m = Integer.parseInt(fecha1[1]) - 1;
        //Año especificado por la fecha recibida por parametros.  
        int a = Integer.parseInt(fecha1[2]);
        //Comparación para saber si el año recibido es bisiesto.  
        int dia = (int) d;
        int mes = (int) m;
        int anno = (int) a;

        if ((anno % 4 == 0) && !(anno % 100 == 0 && anno % 400 != 0)) {
            mes = bisiesto[mes];
        } else {
            mes = regular[mes];
        }
        //Se retorna el resultado del calculo del día de la semana. 
        int dd = (int) Math.ceil(Math.ceil(Math.ceil((anno - 1) % 7) + Math.ceil((Math.floor((anno - 1) / 4) - Math.floor((3 * (Math.floor((anno - 1) / 100) + 1)) / 4)) % 7) + mes + dia % 7) % 7);

        String DD = semana[dd].toString();
        String MM = meses[m].toString();
        String fechafinal = DD + " " + d + " de " + MM + " " + a;
        return fechafinal;
    }

    /*public void tabla_consultar_renta() {   // funcion para llenar al abrir la ventana  
     funcion.conectate();
     tabla_prox_rentas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
     String[] columNames = {"Id ", "Folio", "Cliente", "Estado", "Fecha Entrega", "Hora Entrega", "Descripcion", "Chofer"};
     String[] colName = {"id_renta", "Folio", "cliente", "estado", "fecha_entrega", "hora_entrega", "descripcion", "Chofer"};
     //nombre de columnas, tabla, instruccion sql        

     dtconduc = funcion.GetTabla(colName, "renta", sql);

     int filas = dtconduc.length;
     String fecha, fecha2;

     for (int i = 0; i < filas; i++) {
     fecha = dtconduc[i][4].toString();
     System.out.println("fecha" + " " + fecha);
     fecha2 = dia_semana(fecha);
     dtconduc[i][4] = fecha2;
     }

     DefaultTableModel datos = new DefaultTableModel(dtconduc, columNames);
     tabla_prox_rentas.setModel(datos);

     DefaultTableCellRenderer centrar = new DefaultTableCellRenderer();
     centrar.setHorizontalAlignment(SwingConstants.CENTER);

     int[] anchos = {60, 60, 250, 120, 250, 100, 400, 100};

     for (int inn = 0; inn < tabla_prox_rentas.getColumnCount(); inn++) {
     tabla_prox_rentas.getColumnModel().getColumn(inn).setPreferredWidth(anchos[inn]);
     }

     tabla_prox_rentas.getColumnModel().getColumn(0).setMaxWidth(0);
     tabla_prox_rentas.getColumnModel().getColumn(0).setMinWidth(0);
     tabla_prox_rentas.getColumnModel().getColumn(0).setPreferredWidth(0);

     tabla_prox_rentas.getColumnModel().getColumn(1).setCellRenderer(centrar);
     tabla_prox_rentas.getColumnModel().getColumn(2).setCellRenderer(centrar);
     tabla_prox_rentas.getColumnModel().getColumn(3).setCellRenderer(centrar);
     tabla_prox_rentas.getColumnModel().getColumn(4).setCellRenderer(centrar);
     tabla_prox_rentas.getColumnModel().getColumn(0).setCellRenderer(centrar);

     funcion.desconecta();

     }*/

    /*public void tabla_devoluciones() {   // funcion para llenar al abrir la ventana  
     funcion.conectate();
     tabla_devoluciones.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
     String[] columNames = {"Id ", "Folio", "Cliente", "Estado", "Fecha Entrega", "Hora Entrega", "Devolucion", "Descripcion", "Chofer"};
     String[] colName = {"id_renta", "Folio", "cliente", "estado", "fecha_entrega", "hora_entrega", "fecha_devolucion", "descripcion", "Chofer"};
     //nombre de columnas, tabla, instruccion sql        

     dtconduc = funcion.GetTabla(colName, "renta", "SELECT r.`id_renta`,r.`folio`,CONCAT(c.`nombre`,\" \", c.`apellidos`)AS cliente,e.`descripcion` as estado, r.`fecha_entrega`, r.`hora_entrega`,r.`fecha_devolucion`, r.`descripcion`,CONCAT(u.`nombre`,\" \",u.`apellidos`)AS Chofer FROM renta r, estado e, clientes c,usuarios u\n"
     + "WHERE r.id_estado=e.id_estado AND r.id_clientes=c.id_clientes AND STR_TO_DATE(r.`fecha_devolucion`, '%d/%m/%Y') >= STR_TO_DATE('" + fecha_sistema + "', '%d/%m/%Y') AND r.id_usuario_chofer=u.id_usuarios AND r.`id_tipo`='1' ORDER BY r.`folio`");

     int filas = dtconduc.length;
     String fecha, fecha2;

     for (int i = 0; i < filas; i++) {
     fecha = dtconduc[i][4].toString();
     System.out.println("fecha" + " " + fecha);
     fecha2 = dia_semana(fecha);
     dtconduc[i][4] = fecha2;
     }

     DefaultTableModel datos = new DefaultTableModel(dtconduc, columNames);
     tabla_devoluciones.setModel(datos);

     DefaultTableCellRenderer centrar = new DefaultTableCellRenderer();
     centrar.setHorizontalAlignment(SwingConstants.CENTER);

     int[] anchos = {60, 60, 250, 120, 250, 100, 100, 400, 100};

     for (int inn = 0; inn < tabla_devoluciones.getColumnCount(); inn++) {
     tabla_devoluciones.getColumnModel().getColumn(inn).setPreferredWidth(anchos[inn]);
     }

     tabla_devoluciones.getColumnModel().getColumn(0).setMaxWidth(0);
     tabla_devoluciones.getColumnModel().getColumn(0).setMinWidth(0);
     tabla_devoluciones.getColumnModel().getColumn(0).setPreferredWidth(0);

     tabla_devoluciones.getColumnModel().getColumn(1).setCellRenderer(centrar);
     tabla_devoluciones.getColumnModel().getColumn(2).setCellRenderer(centrar);
     tabla_devoluciones.getColumnModel().getColumn(3).setCellRenderer(centrar);
     tabla_devoluciones.getColumnModel().getColumn(4).setCellRenderer(centrar);
     tabla_devoluciones.getColumnModel().getColumn(0).setCellRenderer(centrar);

     funcion.desconecta();

     }*/
    public void abrir_ventana(JInternalFrame internalFrame) {
        int x = (jDesktopPane1.getWidth() / 2) - internalFrame.getWidth() / 2;
        int y = (jDesktopPane1.getHeight() / 2) - internalFrame.getHeight() / 2;
        if (internalFrame.isShowing()) {
            internalFrame.setLocation(x, y);
        } else {
            jDesktopPane1.add(internalFrame);
            internalFrame.setLocation(x, y);
            internalFrame.show();
        }

    }

    public void abrir_clientes() {
        if (estacerrado(ventana_clientes)) {
            ventana_clientes = new clientes();
            ventana_clientes.setLocation(this.getWidth() / 2 - ventana_clientes.getWidth() / 2, this.getHeight() / 2 - ventana_clientes.getHeight() / 2 - 20);
            jDesktopPane1.add(ventana_clientes);
            ventana_clientes.show();
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void abrir_inventario() {
        if (estacerrado(ventana_inventario)) {
            ventana_inventario = new inventario();
            ventana_inventario.setLocation(this.getWidth() / 2 - ventana_inventario.getWidth() / 2, this.getHeight() / 2 - ventana_inventario.getHeight() / 2 - 20);
            jDesktopPane1.add(ventana_inventario);
            ventana_inventario.show();
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void abrir_abonos() {
        if (estacerrado(ventana_abonos)) {
            ventana_abonos = new consultar_abonos();
            ventana_abonos.setLocation(this.getWidth() / 2 - ventana_abonos.getWidth() / 2, this.getHeight() / 2 - ventana_abonos.getHeight() / 2 - 20);
            jDesktopPane1.add(ventana_abonos);
            ventana_abonos.show();
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void abrir_iniciar_sesion() {
        if (estacerrado(v_iniciar_sesion)) {
            v_iniciar_sesion = new iniciar_sesion();
            v_iniciar_sesion.setLocation(this.getWidth() / 2 - v_iniciar_sesion.getWidth() / 2, this.getHeight() / 2 - v_iniciar_sesion.getHeight() / 2 - 20);
            //jDesktopPane1.add(v_iniciar_sesion);
            v_iniciar_sesion.show();

        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void mostrar_utilerias() {
        utilerias v_utilerias = new utilerias(null, true);
        v_utilerias.setVisible(true);
        v_utilerias.setLocationRelativeTo(null);
    }

    public void abrir_usuarios() {
        if (estacerrado(ventana_usuarios)) {
            ventana_usuarios = new usuarios();
            ventana_usuarios.setLocation(this.getWidth() / 2 - ventana_usuarios.getWidth() / 2, this.getHeight() / 2 - ventana_usuarios.getHeight() / 2 - 20);
            jDesktopPane1.add(ventana_usuarios);
            ventana_usuarios.show();
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void abrir_nueva_renta() {
        if (estacerrado(ventana_agregar_renta)) {
            ventana_agregar_renta = new agregar_renta();
            ventana_agregar_renta.setLocation(this.getWidth() / 2 - ventana_agregar_renta.getWidth() / 2, this.getHeight() / 2 - ventana_agregar_renta.getHeight() / 2 - 20);
            jDesktopPane1.add(ventana_agregar_renta);
            ventana_agregar_renta.show();
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public void abrir_consultar_renta() throws PropertyVetoException {
        if (estacerrado(v_consultar_renta)) {
            v_consultar_renta = new consultar_renta();
            v_consultar_renta.setLocation(this.getWidth() / 2 - v_consultar_renta.getWidth() / 2, this.getHeight() / 2 - v_consultar_renta.getHeight() / 2 - 20);
            jDesktopPane1.add(v_consultar_renta);
            v_consultar_renta.show();
            /*try {
             v_consultar_renta.setMaximum(true);
             } catch (PropertyVetoException e) {
             // Vetoed by internalFrame
             // ... possibly add some handling for this case
             }*/
        } else {
            JOptionPane.showMessageDialog(this, "Ahi ta la ventana =)");
        }

    }

    public boolean estacerrado(Object obj) {
        JInternalFrame[] activos = jDesktopPane1.getAllFrames();
        boolean cerrado = true;
        int i = 0;
        while (i < activos.length && cerrado) {
            if (activos[i] == obj) {
                cerrado = false;
            }
            i++;
        }
        return cerrado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_logueo = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        lblPuesto = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jbtn_usuarios = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton7 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jbtn_cerrar_sesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Casa Gaby Eventos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Admin-icon_48.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lbl_logueo.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jPanel1.add(lbl_logueo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 328, 22));

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, -1, 64));
        jPanel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 10));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Apps-preferences-system-windows-actions-icon_48.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, -1));
        jPanel1.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 760, 10));

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel3.setText("gtorreblancaluna@gmail.com");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 30, 300, 20));

        lblPuesto.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12)); // NOI18N
        jPanel1.add(lblPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 14, 330, 20));

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 0, 10, 60));

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel5.setText("Version 1.4.3");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 24, 150, 20));

        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel6.setText("Contacto: L.I. Gerardo Torreblanca Luna");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 300, 20));

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 10, 60));

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1163, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(641, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar1.setRollover(true);
        jToolBar1.add(jSeparator1);

        jButton3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rentas_48.png"))); // NOI18N
        jButton3.setMnemonic('A');
        jButton3.setToolTipText("Agregar evento (Alt+A)");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/consultar_renta_48.png"))); // NOI18N
        jButton4.setMnemonic('C');
        jButton4.setToolTipText("Consultar eventos (Alt+C)");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);
        jToolBar1.add(jSeparator2);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/inventario_48.png"))); // NOI18N
        jButton2.setMnemonic('I');
        jButton2.setToolTipText("Inventario (Alt+I)");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/coins-icon_48.png"))); // NOI18N
        jButton5.setMnemonic('Z');
        jButton5.setToolTipText("Consultar abonos (Alt+Z)");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator4);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Utilities-icon_48.png"))); // NOI18N
        jButton6.setToolTipText("Utilerias");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Apps-system-users-icon_48.png"))); // NOI18N
        jButton1.setToolTipText("Clientes");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jbtn_usuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/User-Files-icon_48.png"))); // NOI18N
        jbtn_usuarios.setToolTipText("Usuarios");
        jbtn_usuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_usuarios.setFocusable(false);
        jbtn_usuarios.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtn_usuarios.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtn_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_usuariosActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtn_usuarios);
        jToolBar1.add(jSeparator3);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/database-arrow-down-icon_48.png"))); // NOI18N
        jButton7.setToolTipText("Respaldar base de datos");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);
        jToolBar1.add(jSeparator5);

        jbtn_cerrar_sesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar_ventana_48.png"))); // NOI18N
        jbtn_cerrar_sesion.setMnemonic('C');
        jbtn_cerrar_sesion.setToolTipText("Cerrar sesion (Alt+C)");
        jbtn_cerrar_sesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtn_cerrar_sesion.setFocusable(false);
        jbtn_cerrar_sesion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtn_cerrar_sesion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtn_cerrar_sesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_cerrar_sesionActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtn_cerrar_sesion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDesktopPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_usuariosActionPerformed
        // TODO add your handling code here:
        abrir_usuarios();
    }//GEN-LAST:event_jbtn_usuariosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        abrir_clientes();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        abrir_inventario();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        abrir_nueva_renta();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            abrir_consultar_renta();
        } catch (PropertyVetoException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(iniciar_sesion.usuarioGlobal.getAdministrador().equals("0")){
                JOptionPane.showMessageDialog(null, "Solo el administrador puede visualizar abonos ", "Error", JOptionPane.INFORMATION_MESSAGE);
                return;
        }
        abrir_abonos();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(iniciar_sesion.usuarioGlobal.getAdministrador().equals("0")){
                JOptionPane.showMessageDialog(null, "Solo el administrador puede abrir las preferencias del sistema :( ", "Error", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        mostrar_utilerias();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jbtn_cerrar_sesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_cerrar_sesionActionPerformed
        // TODO add your handling code here:
        int seleccion = JOptionPane.showOptionDialog(this, "Confirme para salir del sistema \nNo se guardaran los cambios en ningun formulario abierto.", "Cerrar sesion", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si", "No"}, "Si");
        if (seleccion == 0) {//presiono que si
            abrir_iniciar_sesion();
            this.dispose();
        }

    }//GEN-LAST:event_jbtn_cerrar_sesionActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(iniciar_sesion.usuarioGlobal.getAdministrador().equals("0")){
                JOptionPane.showMessageDialog(null, "Solo el administrador puede realizar esta accion :( ", "Error", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        bd r = new bd(this, true);
        r.setVisible(true);
        r.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la ventana actual?", "Salir del sistema ", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
//            funcion.desconecta();
            System.exit(0);
        } else {
            
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbtn_cerrar_sesion;
    private javax.swing.JButton jbtn_usuarios;
    private javax.swing.JLabel lblPuesto;
    private javax.swing.JLabel lbl_logueo;
    // End of variables declaration//GEN-END:variables
}
