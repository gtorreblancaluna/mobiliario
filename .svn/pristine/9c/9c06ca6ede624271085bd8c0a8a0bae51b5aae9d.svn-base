/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utilities;

import java.awt.Dialog;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.MessagingException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import mobiliario.ApplicationConstants;
import mobiliario.iniciar_sesion;
import mobiliario.principal;


/**
 *
 * @author idscomercial
 */
public abstract class Utility {
    
    static final SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    
    public static void pushNotification(final String notification){
        StringBuilder messages = new StringBuilder();
        
        String date = simpleDateFormat.format(new Timestamp(System.currentTimeMillis()));
        
        principal.listNotifications.add(date+" >> "+notification);
        for(String n : principal.listNotifications){
            messages.append(n);
            messages.append("\n");
        }
        principal.txtAreaNotifications.setText(null);
        principal.txtAreaNotifications.setText(messages+"");
    }
    
    public static JDialog showDialog(final String title, final String content){
        
        JDialog dialog = new JDialog(new JFrame());
        dialog.setModalityType(Dialog.ModalityType.MODELESS);
        dialog.setBounds(0,0,100, 100);
        dialog.setSize(300,100);
        dialog.add(new JLabel(content));
        dialog.setTitle(title);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
            
//        JOptionPane pane = new JOptionPane("Espere porfavor...", JOptionPane.INFORMATION_MESSAGE);
//        JDialog dialog = pane.createDialog(null, "Espere porfavor...");
//        dialog.setModal(false);
//        dialog.setVisible(true);

               
        
//        final String IMAGE_URL = "src/img/loading.gif";

//        JDialog dialog = new JDialog(new JFrame() , title, false);  
//        dialog.setLayout( new BorderLayout()); 
//        
//        ImageIcon image = new ImageIcon(IMAGE_URL); //imports the image
//
//        dialog.add( new JLabel (image)); 
////        dialog.setSize(300,200);    
//        dialog.pack();
//        dialog.setLocationRelativeTo(null);
//        dialog.setVisible(true);  
 
        
        /*
        JLabel label = new JLabel(content, SwingConstants.CENTER);
        label.setFont(label.getFont().deriveFont(Font.BOLD, 24f));
        JDialog dialog = new JDialog();
         dialog.setLayout( new FlowLayout() );     
         dialog.setSize(300, 100);
         dialog.setTitle(title);
        
         dialog.setLocationRelativeTo(null);
//        dialog.setModal(true);
//        dialog.setResizable(false);
//        dialog.setUndecorated(true);
//        dialog.pack();
        dialog.setVisible(true);
        
        
        */
        return dialog;
    }
    
    // obtiene la fecha del sistema con un caracter delimitador
    public static String getSystemDate(String delimiterCharacter) {
        String systemDate = null;
        Calendar fecha = Calendar.getInstance();
        String mes = Integer.toString(fecha.get(Calendar.MONTH) + 1);
        String dia = Integer.toString(fecha.get(Calendar.DATE));
        String auxMes = null, auxDia = null;
        

        if (mes.length() == 1) {
            auxMes = "0" + mes;
            systemDate = fecha.get(Calendar.DATE) + delimiterCharacter + auxMes + delimiterCharacter + fecha.get(Calendar.YEAR);

            if (dia.length() == 1) {
                auxDia = "0" + dia;
                systemDate = auxDia + delimiterCharacter + auxMes + delimiterCharacter + fecha.get(Calendar.YEAR);

            }

        } else {
            systemDate = fecha.get(Calendar.DATE) + delimiterCharacter + (fecha.get(Calendar.MONTH) + 1) + delimiterCharacter + fecha.get(Calendar.YEAR);
        }
        
        return systemDate;
    }
    
    public static String deleteCharacters(String s_cadena, String s_caracteres) {
        String nueva_cadena = "";
        Character caracter = null;
        boolean valido = true;

        /* Va recorriendo la cadena s_cadena y copia a la cadena que va a regresar,
         sólo los caracteres que no estén en la cadena s_caracteres */
        for (int i = 0; i < s_cadena.length(); i++) {
            valido = true;
            for (int j = 0; j < s_caracteres.length(); j++) {
                caracter = s_caracteres.charAt(j);

                if (s_cadena.charAt(i) == caracter) {
                    valido = false;
                    break;
                }
            }
            if (valido) {
                nueva_cadena += s_cadena.charAt(i);
            }
        }

        return nueva_cadena;
    }
  
    
     public static boolean validateAmount(String value) { 
        boolean valid = false;
        Float amount = null;
        
        if(value == null || value.isEmpty() || value.equals(""))
            return false;
        
         try {
             amount = new Float(value);
         } catch (NumberFormatException e) {
             valid = false;
         }
         
         if(amount == null  || amount <= 0)
            valid = false;
        else
            valid = true;         
        
        return valid;
    }
     
    public static boolean validateComboBoxDataValue(String value){
                
        if(value == null 
                || value.isEmpty()
                || value.equals(ApplicationConstants.CMB_SELECCIONE))
            return false;
        else
            return true;
    
    }
    
   
    public static boolean showWindowDataUpdateSession(){
        
        JPasswordField pf = new JPasswordField(); 
        pf.addAncestorListener(new RequestFocusListener());
        int okCxl = JOptionPane.showConfirmDialog(null, pf, "Introduce tu contrase\u00F1a", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE); 
       
        
        if (okCxl == JOptionPane.OK_OPTION) {
            String password = new String(pf.getPassword()); 
            System.out.println("You entered: " + password); 
            if(!iniciar_sesion.dataSessionUptade(password)){
                JOptionPane.showMessageDialog(null, ApplicationConstants.DS_MESSAGE_FAIL_LOGIN, ApplicationConstants.TITLE_MESSAGE_FAIL_LOGIN, JOptionPane.ERROR_MESSAGE);
                return false;
            }else{
              return true;
            }
        }else{
            return false;
        }

//            JPanel panel = new JPanel();
//            JLabel label = new JLabel("Introduce tu contrase\u00F1a:");
//            JPasswordField pass = new JPasswordField(10);
//            panel.add(label);
//            panel.add(pass);
//              
//            String[] options = new String[]{"Ingresar", "Cancelar"};
//            int option = JOptionPane.showOptionDialog(null, panel, "Actualizar sesi\u00F3n",
//                                     JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
//                                     null, options, options[0]);
//            
//            if(option == 0){ // pressing ingresar
//                char[] password = pass.getPassword();
//                System.out.println("Your password is: " + new String(password));
//                if(!iniciar_sesion.dataSessionUptade(new String(password))){
//                    JOptionPane.showMessageDialog(null, ApplicationConstants.DS_MESSAGE_FAIL_LOGIN, ApplicationConstants.TITLE_MESSAGE_FAIL_LOGIN, JOptionPane.ERROR_MESSAGE);
//                    return false;
//                }else{
//                  return true;
//                }
//            }else{
//                return false;
//            }
    }
    
     public static void isEmail(String email) throws MessagingException{ //validar correo electronico
         
        Pattern pat;
        Matcher mat;
        pat = Pattern.compile("^([0-9a-zA-Z]([_.w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-w]*[0-9a-zA-Z].)+([a-zA-Z]{2,9}.)+[a-zA-Z]{2,3})$");
        
        if(email == null || email.equals("")){
            throw new MessagingException("Email vacio");
        }else{
            String[] array = email.split(";");
            for(String e : array){
                mat = pat.matcher(e);
                if(!mat.find()){
                    throw new MessagingException("Email no v\u00E1lido: "+e);
                }
            }
        }
        
    }
    
}
