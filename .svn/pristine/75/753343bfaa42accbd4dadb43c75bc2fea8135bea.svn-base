/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mobiliario;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.CategoriaContabilidad;
import model.Contabilidad;
import model.SubCategoriaContabilidad;
import services.ContabilidadServices;
import utilities.Utility;

/**
 *
 * @author idscomercial
 */
public final class ContabilidadForm extends javax.swing.JInternalFrame {
    ContabilidadServices contabilidadServices = new ContabilidadServices();
    
    /**
     * Creates new form ContabilidadForm
     */
    public ContabilidadForm() {
        
        initComponents();
        llenar_categorias();
        formato_tabla_contabilidad();
        this.cmbSubCategoria.setEnabled(false);
        actionListener();
        
        
    }
    public void actionListener(){
        cmbCategoria.addActionListener((ActionEvent arg0) -> {
            llenar_sub_categorias();
        });
    }

    public void llenar_categorias(){
        List<CategoriaContabilidad> list = contabilidadServices.getAllCategoriasContabilidad();
        this.cmbCategoria.removeAllItems();
        this.cmbCategoria.addItem(ApplicationConstants.CMB_SELECCIONE);
        for(CategoriaContabilidad categoria : list){
            this.cmbCategoria.addItem(categoria.getDescripcion());
        }
    }
    
     public void mostrar_categorias_contabilidad() {
        CategoriaContabilidadForm ventana = new CategoriaContabilidadForm(null, true);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
    }
     
      public void mostrar_sub_categorias_contabilidad() {
        SubCategoriaContabilidadForm ventana = new SubCategoriaContabilidadForm(null, true);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
    }
      
  
    
    public void llenar_sub_categorias(){
        String categoria = this.cmbCategoria.getSelectedItem().toString();
        if(categoria == null 
                || categoria.isEmpty()
                || categoria.equals("")
                )
        {
            JOptionPane.showMessageDialog(null, "No se recibio el parametro correctamente :( ", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        if(categoria.equals(ApplicationConstants.CMB_SELECCIONE)){
            this.cmbSubCategoria.removeAllItems();
            this.cmbSubCategoria.addItem(ApplicationConstants.CMB_SELECCIONE);
            this.cmbSubCategoria.setEnabled(false);
        }
        CategoriaContabilidad category = contabilidadServices.getCategoryByName(categoria);
        if(category == null)
            return;
        List<SubCategoriaContabilidad> list = 
                contabilidadServices.getAllSubCategoriasContabilidadByCategoriaId(category.getCategoriaContabilidadId());
        
        if(list == null || list.isEmpty() || list.size()<=0 )
            return;
        
        this.cmbSubCategoria.removeAllItems();
        this.cmbSubCategoria.addItem(ApplicationConstants.CMB_SELECCIONE);
        for(SubCategoriaContabilidad sub : list){
            String dsIngreso = null;
            if(sub.getIngreso().equals("1"))
                dsIngreso = " (+)";
            else
                dsIngreso = " (-)";
            this.cmbSubCategoria.addItem(sub.getDescripcion()+dsIngreso);
        }
        this.cmbSubCategoria.setEnabled(true);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbSubCategoria = new javax.swing.JComboBox();
        cmbCategoria = new javax.swing.JComboBox();
        txtComentario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        lblAgregarCategoria = new javax.swing.JLabel();
        lblAgregarSubCategoria = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_contabilidad = new javax.swing.JTable(){public boolean isCellEditable(int rowIndex,int colIndex){return false;}};
        txt_fecha_inicial = new com.toedter.calendar.JDateChooser();
        txt_fecha_final = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btnRegistrar1 = new javax.swing.JButton();
        lblSummaryResults = new javax.swing.JLabel();
        lblSummaryIngresos = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Contabilidad");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registra ingreso o egreso", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Categoria:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 24, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel2.setText("Sub categoria:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 24, -1, -1));

        cmbSubCategoria.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbSubCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSubCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbSubCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbSubCategoriaMouseClicked(evt);
            }
        });
        jPanel1.add(cmbSubCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 166, 20));

        cmbCategoria.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoriaItemStateChanged(evt);
            }
        });
        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(cmbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 166, 20));

        txtComentario.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComentarioActionPerformed(evt);
            }
        });
        jPanel1.add(txtComentario, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 260, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Comentario:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        btnRegistrar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.setDefaultCapable(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, -1, 20));

        lblAgregarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add-icon.png"))); // NOI18N
        lblAgregarCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregarCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarCategoriaMouseClicked(evt);
            }
        });
        lblAgregarCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblAgregarCategoriaKeyPressed(evt);
            }
        });
        jPanel1.add(lblAgregarCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        lblAgregarSubCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add-icon.png"))); // NOI18N
        lblAgregarSubCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregarSubCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarSubCategoriaMouseClicked(evt);
            }
        });
        lblAgregarSubCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblAgregarSubCategoriaKeyPressed(evt);
            }
        });
        jPanel1.add(lblAgregarSubCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Cantidad:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        txtCantidad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 70, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        tabla_contabilidad.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        tabla_contabilidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_contabilidad);

        txt_fecha_inicial.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txt_fecha_inicial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_fecha_inicialMouseClicked(evt);
            }
        });
        txt_fecha_inicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fecha_inicialKeyPressed(evt);
            }
        });

        txt_fecha_final.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txt_fecha_final.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_fecha_finalMouseClicked(evt);
            }
        });
        txt_fecha_final.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fecha_finalKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel5.setText("Fecha inicial y final:");

        btnRegistrar1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnRegistrar1.setText("Realizar busqueda");
        btnRegistrar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar1.setDefaultCapable(false);
        btnRegistrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrar1ActionPerformed(evt);
            }
        });

        lblSummaryResults.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        lblSummaryIngresos.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_fecha_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_fecha_final, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRegistrar1))
                            .addComponent(lblSummaryResults, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSummaryIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_fecha_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_fecha_final, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRegistrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSummaryResults, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSummaryIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1178, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComentarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComentarioActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        String subCategoria = this.cmbSubCategoria.getSelectedItem().toString().replace(" (+)", "").replace(" (-)", "");
        StringBuilder message = new StringBuilder();
        
        if(!Utility.validateComboBoxDataValue(subCategoria))
            message.append("Falta dato de sub categoria\n");
             
        if(!Utility.validateAmount(this.txtCantidad.getText().toString()))
           message.append("Error en cantidad, porfavor verifica el dato\n");
        
        if(!message.toString().equals("")){
            JOptionPane.showMessageDialog(null, message.toString(), "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
         Float cantidad = new Float(txtCantidad.getText().toString());
        
         SubCategoriaContabilidad subCategoriaContabilidad = 
                contabilidadServices.getSubCategoryByName(subCategoria);
        
        Contabilidad contabilidad = new Contabilidad();
        contabilidad.setUsuario(iniciar_sesion.usuarioGlobal);
        contabilidad.setSubCategoriaContabilidad(subCategoriaContabilidad);
        contabilidad.setComentario(txtComentario.getText().toString());
        contabilidad.setCantidad(cantidad);
        
        contabilidadServices.save(contabilidad);
        
        JOptionPane.showMessageDialog(null, ApplicationConstants.MESSAGE_SAVE_SUCCESSFUL, "Successful", JOptionPane.INFORMATION_MESSAGE);
        clean_save_form();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    public void clean_save_form(){
        this.txtCantidad.setText("");
        this.txtComentario.setText("");
        this.cmbSubCategoria.removeAllItems();
        this.cmbSubCategoria.addItem(ApplicationConstants.CMB_SELECCIONE);
        this.cmbSubCategoria.setEnabled(false);
        
    }
    private void lblAgregarCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarCategoriaMouseClicked
        // TODO add your handling code here:
        this.mostrar_categorias_contabilidad();
    }//GEN-LAST:event_lblAgregarCategoriaMouseClicked

    private void lblAgregarCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblAgregarCategoriaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblAgregarCategoriaKeyPressed

    private void lblAgregarSubCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarSubCategoriaMouseClicked
        // TODO add your handling code here:
         if(this.cmbCategoria.getSelectedItem().equals(ApplicationConstants.CMB_SELECCIONE))
        {
             JOptionPane.showMessageDialog(null, "Debe seleccionar una categoria para agregar una sub categoria", "Error", JOptionPane.INFORMATION_MESSAGE);
             return;
        }
        this.cmbSubCategoria.setEnabled(false);
        this.mostrar_sub_categorias_contabilidad();
       
    }//GEN-LAST:event_lblAgregarSubCategoriaMouseClicked

    private void lblAgregarSubCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblAgregarSubCategoriaKeyPressed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_lblAgregarSubCategoriaKeyPressed

    private void cmbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoriaItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbCategoriaItemStateChanged

    private void cmbSubCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSubCategoriaMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSubCategoriaMouseClicked

    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbCategoriaActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txt_fecha_inicialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fecha_inicialMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fecha_inicialMouseClicked

    private void txt_fecha_inicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fecha_inicialKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fecha_inicialKeyPressed

    private void txt_fecha_finalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fecha_finalMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fecha_finalMouseClicked

    private void txt_fecha_finalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fecha_finalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fecha_finalKeyPressed

    public void formato_tabla_contabilidad(){
    Object[][] data = {{"", "", "", "", "","","","",""}};
        String[] columnNames = {"Id", "id sub categoria", "Categoria", "Sub Categoria","ingreso/engreso", "Usuario", "Fecha registro","Comentario","Cantidad"};       
        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        tabla_contabilidad.setModel(tableModel);
       
        TableRowSorter<TableModel> ordenarTabla = new TableRowSorter<TableModel>(tableModel); 
        tabla_contabilidad.setRowSorter(ordenarTabla);
        int[] anchos = {10, 10, 100, 100, 100, 120,120,140,40};

        for (int inn = 0; inn < tabla_contabilidad.getColumnCount(); inn++) {
            tabla_contabilidad.getColumnModel().getColumn(inn).setPreferredWidth(anchos[inn]);
        }        

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT);

        DefaultTableCellRenderer centrar = new DefaultTableCellRenderer();
        centrar.setHorizontalAlignment(SwingConstants.CENTER);

        try {
            DefaultTableModel temp = (DefaultTableModel) tabla_contabilidad.getModel();
            temp.removeRow(temp.getRowCount() - 1);
        } catch (ArrayIndexOutOfBoundsException e) {
            ;
        }
        tabla_contabilidad.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_contabilidad.getColumnModel().getColumn(0).setMinWidth(0);
        tabla_contabilidad.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        tabla_contabilidad.getColumnModel().getColumn(1).setMaxWidth(0);
        tabla_contabilidad.getColumnModel().getColumn(1).setMinWidth(0);
        tabla_contabilidad.getColumnModel().getColumn(1).setPreferredWidth(0);
        
        tabla_contabilidad.getColumnModel().getColumn(5).setCellRenderer(centrar);
        tabla_contabilidad.getColumnModel().getColumn(4).setCellRenderer(centrar);
    
    }
    
    private void btnRegistrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrar1ActionPerformed
        // TODO add your handling code here:
        String initDate = new SimpleDateFormat("dd/MM/yyyy").format(txt_fecha_inicial.getDate());
        String endDate = new SimpleDateFormat("dd/MM/yyyy").format(txt_fecha_final.getDate());
        float ingresos = 0f;
        float egresos = 0f;
        Timestamp tsInitDate = new Timestamp(txt_fecha_inicial.getDate().getTime()); 
        Timestamp tsEndDate = new Timestamp(txt_fecha_final.getDate().getTime()); 
        
        if(initDate == null || initDate.isEmpty() || initDate.equals("")
                || endDate == null || endDate.isEmpty() || endDate.equals("")
                ){
            JOptionPane.showMessageDialog(null, "Error al obtener las fechas\nporfavor verifique fecha inicial y final esten de manera correcta", "Error", JOptionPane.INFORMATION_MESSAGE);
             return;
        }
        

         
        List<Contabilidad> list = new ArrayList<>();
        list =  contabilidadServices.getAllContabilidadByDates(tsInitDate,tsEndDate);
        
        if(list == null || list.isEmpty() || list.size()<=0)
            return;
        
        this.lblSummaryResults.setText("Se obtuvieron :"+list.size()+" resultados");
        
        this.formato_tabla_contabilidad();
        DefaultTableModel temp = (DefaultTableModel) tabla_contabilidad.getModel();
        for(Contabilidad contabilidad : list){
         String dsIngreso = null;
         if(contabilidad.getSubCategoriaContabilidad().getIngreso().equals("1"))
         {
             ingresos += contabilidad.getCantidad();
             dsIngreso = "(+) Ingreso";
         }
         else
         {
             egresos += contabilidad.getCantidad();
             dsIngreso = "(-) Egreso";
         }
        Object fila[] = {
             contabilidad.getContabilidadId(),
             contabilidad.getSubCategoriaContabilidad().getSubCategoriaContabilidadId(),
             contabilidad.getSubCategoriaContabilidad().getCategoriaContabilidad().getDescripcion(),
             contabilidad.getSubCategoriaContabilidad().getDescripcion(),
             dsIngreso,
             contabilidad.getUsuario().getNombre()+" "+contabilidad.getUsuario().getApellidos(),
             contabilidad.getFechaRegistro(),
             contabilidad.getComentario(),
             contabilidad.getCantidad()
         };
        
         temp.addRow(fila); 
        } // end for
        
       this.lblSummaryIngresos.setText("INGRESOS: "+ingresos+" +++++++ EGRESOS: "+egresos+" +++++++ BALANCE ES: "+(ingresos-egresos));
        
        
        
    }//GEN-LAST:event_btnRegistrar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegistrar1;
    public static javax.swing.JComboBox cmbCategoria;
    private javax.swing.JComboBox cmbSubCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAgregarCategoria;
    private javax.swing.JLabel lblAgregarSubCategoria;
    private javax.swing.JLabel lblSummaryIngresos;
    private javax.swing.JLabel lblSummaryResults;
    private javax.swing.JTable tabla_contabilidad;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtComentario;
    private com.toedter.calendar.JDateChooser txt_fecha_final;
    private com.toedter.calendar.JDateChooser txt_fecha_inicial;
    // End of variables declaration//GEN-END:variables
}
